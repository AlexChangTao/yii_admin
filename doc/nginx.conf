# ======================= Nginx Yii2通用后台 二级名配置=================================
# 前台
server {
    listen 80;

    root /var/www/frontend/web;
    index index.php index.html;

    server_name www.yii2.cn;

    charset utf-8;

    # location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js)$ {
    #    access_log off;
    #    expires max;
    # }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    client_max_body_size 32m;

    # There is a VirtualBox bug related to sendfile that can lead to
    # corrupted files, if not turned-off
    # sendfile off;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
    }
}

## 后台 ##
server {
    listen 80;

    root /var/www/backend/web;
    index index.php index.html;

    server_name backend.yii2.cn;

    charset utf-8;

    client_max_body_size 16m;


    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
    }

}

## 存储 ##
server {
    listen 80;
    server_name storage.yii2.cn;

    root /var/www/storage/web;
    index index.html;
    # expires max;
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
    }
}



# ======================= Nginx Yii2通用后台 单域名配置=================================
server {
    charset      utf-8;
    client_max_body_size  32M;

    listen       80; ## listen for ipv4
    #listen       [::]:80 default_server ipv6only=on; ## listen for ipv6

    server_name  www.yii2.cn;

    root  /vagrant/yii2admin;
    index index.php index.html;

    access_log off;
    #access_log   /path/to/logs/advanced.access.log main buffer=50k;
    #error_log    /path/to/logs/advanced.error.log warn;

    # location优先级： (location =) > (location 完整路径) > (location ^~ 路径) > (location ~,~* 正则顺序) > (location 部分起始路径) > (/)
    # 前台重写
    location / {
        root /vagrant/yii2admin/frontend/web;
        try_files $uri /frontend/web/index.php?$args;
    }

    # 后台重写
    location /admin {
        alias  /vagrant/yii2admin/backend/web;
        try_files $uri /backend/web/index.php?$args;
    }

    # API重写
    location /api/v {
        alias  /vagrant/yii2admin/api/web;
        #注意：这里不能用try_files，当location /api和目录名称相同时会出现重写错误！
        try_files $uri /api/web/index.php?$args;
        #if (!-f $request_filename){
        #        rewrite ^(.*)$ /api/web/index.php?r=$1 last;
        #}
    }

    # 存储重写，必须存在不然这个目录下的图片都会出问题（都会使用location /这个下面的重写）
    location /storage {
        #下面这句是将www.xxx.com/storage重定向/vagrant/yii2admin/storage/web目录中
        alias  /vagrant/yii2admin/storage/web;
        #注意：这里不能用try_files，当location /storage和目录名称相同时会出现重写错误！
        #try_files $uri /storage/web/index.php?$args;
        #下面是隐藏index.php的重写
        #if (!-f $request_filename){
        #        rewrite ^(.*)$ /storage/web/index.php?$args last;
        #}
    }

    include enable-php.conf;
    #error_page  404 /404.html;

    # 排除文件
    location = /requirements.php {
        deny all;
    }
    location ~ \.(ht|svn|git|env) {
        deny all;
    }
}
